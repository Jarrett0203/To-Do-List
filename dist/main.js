(()=>{"use strict";var e={d:(t,n)=>{for(var a in n)e.o(n,a)&&!e.o(t,a)&&Object.defineProperty(t,a,{enumerable:!0,get:n[a]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};e.d({},{Z:()=>r}),document.querySelector(".projectList");class t{constructor(e,t,n="No date",a="Inbox"){this.done=e,this.name=t,this.date=n,this.project=a}}const n=JSON.parse(localStorage.getItem("tasks")||"[]");function a(e){const t=document.querySelector(".todos");t.textContent="",t.append(function(e){const t=document.createElement("div"),a=document.createElement("p"),s=document.createElement("div"),c=document.createElement("button"),o=document.createElement("i"),i=document.createElement("div");return t.classList.add("inboxDiv"),a.textContent=e,a.classList.add("todosTitle"),s.classList.add("taskList","hidden"),0!=n.length&&d(s),o.classList.add("fa-solid","fa-plus"),c.textContent="Add Task",c.classList.add("addTaskBtn"),c.addEventListener("click",(e=>r(e.target))),i.classList.add("addTaskPopup"),c.prepend(o),t.append(a,s,c,i),t}(e))}function d(e){e.classList.remove("hidden"),console.log(n),e.textContent="",n.forEach((t=>{!function(e,t){const a=document.createElement("div"),d=document.createElement("div"),o=document.createElement("div"),i=document.createElement("i"),l=document.createElement("p"),r=document.createElement("input"),m=document.createElement("p"),u=document.createElement("input"),p=document.createElement("i");a.classList.add("taskDiv"),d.classList.add("leftTaskDiv"),o.classList.add("rightTaskDiv"),i.classList.add("checkbox","far","fa-circle"),l.classList.add("taskName"),r.classList.add("taskEditName","hidden"),m.classList.add("taskDate"),u.classList.add("taskEditDate","hidden"),p.classList.add("taskRemove","fas","fa-times"),l.textContent=t.name,m.textContent=t.date,u.type="date",l.addEventListener("click",(e=>c(e.target,r))),m.addEventListener("click",(e=>c(e.target,u))),r.addEventListener("keypress",(e=>{"Enter"===e.key&&function(e,t,a){const d=e.value;""===d?confirm("Please enter a name"):(t.name=d,a.textContent=d,localStorage.setItem("tasks",JSON.stringify(n)),c(e,a))}(e.target,t,l)})),u.addEventListener("change",(e=>{!function(e,t,a){console.log(e.value);const d=e.value;""===d?d="No date":(t.date=d,a.textContent=d,localStorage.setItem("tasks",JSON.stringify(n)),c(e,a))}(e.target,t,m)})),i.addEventListener("click",(n=>function(e,t,n){s(t,n)}(n.target,e,t))),p.addEventListener("click",(()=>s(e,t))),d.append(i,l,r),o.append(m,u,p),a.append(d,o),e.append(a)}(e,t)}))}function s(e,t){console.log("test");const a=n.indexOf(t);n.splice(a,1),localStorage.setItem("tasks",n),0!=n.length?d(e):e.classList.add("hidden")}function c(e,t){e.classList.add("hidden"),t.classList.remove("hidden")}const o=document.querySelectorAll(".navElement"),i=document.querySelector(".addProjectPopup");function l(e){const a=document.createElement("div"),s=document.createElement("input"),c=document.createElement("button"),o=document.createElement("button");let l;s.classList.add("name"),s.setAttribute("type","text"),c.classList.add("add"),o.classList.add("cancel"),e.classList.add("hidden"),c.textContent="Add",o.textContent="Cancel",o.addEventListener("click",(()=>{e.style.display="flex",a.remove()})),a.append(s,c,o),"addProject"==e.id?(a.classList.add("addProjectDiv"),i.append(a),l=document.getElementById("addProject")):(a.classList.add("addTaskDiv"),document.querySelector(".addTaskPopup").append(a),l=document.querySelector(".addTaskBtn")),c.addEventListener("click",(()=>function(e,a,s,c){""==s.value?confirm("Please enter a name"):("addProject"==c?(document.querySelector(".projectList"),s.value):function(e,a){const s=new t(!1,a);n.push(s),localStorage.setItem("tasks",JSON.stringify(n)),d(e)}(document.querySelector(".taskList"),s.value),e.classList.remove("hidden"),a.remove())}(l,a,s,e.id)))}o.forEach((e=>e.addEventListener("click",(e=>function(e){if(e.classList.contains("navElement")){if(e.classList.contains("active"))return;"addProject"==e.id?l(e):(console.log(e.id),a(e.id),function(e){o.forEach((t=>{t!==e&&t.classList.remove("active")})),e.classList.add("active")}(e))}}(e.target))))),a("Inbox");const r=l})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,